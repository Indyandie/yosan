#!/usr/bin/env zsh

root_dir=$1
month=$(echo $root_dir | sd ".*/([0-9\-]+)" "\$1")
root_file="$root_dir/transactions.csv"
category_file="$root_dir/category.csv"
month_file="$root_dir/month-biweek.csv"

xyconf="--- 
config: 
   themeVariables:
      xyChart: 
         backgroundColor: \"#000\"
         plotColorPalette: \"#ffac1c, #097969\"
---"

month_charts() {
    if command -v qsv &>/dev/null; then
        xaxis=$(bat "$month_file" | qsv transpose | qsv select 1 | qsv behead | sd '\n(\w)' ", \$1")
        bar_half1=$(bat "$month_file" | qsv transpose | qsv select 2 | qsv behead | sd '\n([0-9-])' ", \$1")
        bar_half2=$(bat "$month_file" | qsv transpose | qsv select 3 | qsv behead | sd '\n([0-9-])' ", \$1")
        bar_month=$(bat "$month_file" | qsv transpose | qsv select 4 | qsv behead | sd '\n([0-9-])' ", \$1")
        yaxis_max=5500
        yaxis_month_max=8500
    else
        xaxis=$(bat "$month_file" | qsvlite transpose | qsvlite select 1 | qsvlite behead | sd '\n(\w)' ", \$1")
        bar_half1=$(bat "$month_file" | qsvlite transpose | qsvlite select 2 | qsvlite behead | sd '\n([0-9-])' ", \$1")
        bar_half2=$(bat "$month_file" | qsvlite transpose | qsvlite select 3 | qsvlite behead | sd '\n([0-9-])' ", \$1")
        bar_month=$(bat "$month_file" | qsvlite transpose | qsvlite select 4 | qsvlite behead | sd '\n([0-9-])' ", \$1")
        yaxis_max=5500
        yaxis_month_max=8500
    fi
    echo "---

 ### Half 01

\`\`\`mermaid
$xyconf
xychart-beta horizontal
    title \"Earnings, Spending, Budget\"
    y-axis \"Amount\" 0 --> $yaxis_max
    x-axis [$xaxis]
    bar [$bar_half1]
\`\`\`

### Half 02

\`\`\`mermaid
$xyconf
xychart-beta horizontal
    title \"Earnings, Spending, Budget\"
    y-axis \"Amount\" 0 --> $yaxis_max
    x-axis [$xaxis]
    bar [$bar_half2]
\`\`\`

### Month

\`\`\`mermaid
$xyconf
xychart-beta horizontal 
    title \"Earnings, Spending, Budget\"
    y-axis \"Amount\" 0 --> $yaxis_month_max
    x-axis [$xaxis]
    bar [$bar_month]
\`\`\`"
}

category_charts() {
    if command -v qsv &>/dev/null; then
        category_pie_chart=$(bat "$category_file" | qsv select 1,3 | qsv behead | sd "," " : " | sd '^(\w+)' '\t"$1"')

        category_xaxis=$(bat "$category_file" | qsv select 1 | qsv behead | sd '\n(\w)' ", \$1")
        category_bar_budget=$(bat "$category_file" | qsv select 2 | qsv behead | sd '\n([0-9-])' ", \$1")
        category_bar_spent=$(bat "$category_file" | qsv select 3 | qsv behead | sd '\n([0-9-])' ", \$1")
    else
        category_pie_chart=$(bat "$category_file" | qsvlite select 1,3 | qsvlite behead | sd "," " : " | sd '^(\w+)' '\t"$1"')

        category_xaxis=$(bat "$category_file" | qsvlite select 1 | qsvlite behead | sd '\n(\w)' ", \$1")
        category_bar_budget=$(bat "$category_file" | qsvlite select 2 | qsvlite behead | sd '\n([0-9-])' ", \$1")
        category_bar_spent=$(bat "$category_file" | qsvlite select 3 | qsvlite behead | sd '\n([0-9-])' ", \$1")
    fi

    echo "---

\`\`\`mermaid
%%{init: {\"pie\": {\"textPosition\": 0.9}, \"themeVariables\": {\"pieOuterStrokeWidth\": \"2px\"}} }%%
pie showData
   title Categories
$category_pie_chart
\`\`\`

### Budget

\`\`\`mermaid
$xyconf
xychart-beta
    title \"Budget vs. Spending\"
    y-axis \"Amount\" 0 --> 3000
    x-axis [$category_xaxis]
    bar [$category_bar_budget]
    bar [$category_bar_spent]
\`\`\`"
}

gen_files() {
    markdown="# Budget $month

$month_table
$(month_charts)

## Categories

$category_table
$(category_charts)
"

    echo "$markdown" >"$md_output"
    mkdir $mer_dir
    mmdc -i "$md_output" -o "$mmdc_ouput" -t dark -b black -e png

    cd $mer_dir

    pandoc -f gfm -t pdf -o "./budget-$month.pdf" *.md --pdf-engine pdflatex

    cd -

    cp "$root_dir/mer/budget-$month.pdf" "$root_dir"

    rm -rf $mer_dir
}

if [ -f "$root_file" ]; then
    md_output="$root_dir/$month-budget.md"
    mer_dir="$root_dir/mer"
    mmdc_ouput="$root_dir/mer/$month-budget-mmdc.md"
    rm "$md_output"

    month_table=$(./month-biweek $root_dir) && category_table=$(./category $root_dir)

    if [[ -f "$month_file" && -f "$category_file" ]]; then
        gen_files
    fi
else
    echo "$root_file doesn't exist"
fi
